import pygame
import sys

# Inicializar Pygame
pygame.init()

# Configuraci칩n de la pantalla
screen_width, screen_height = 800, 600
screen = pygame.display.set_mode((screen_width, screen_height), pygame.FULLSCREEN)
pygame.display.set_caption("Laberinto con Estrellas")

# Colores
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
YELLOW = (255, 255, 0)

# Definir los laberintos
mazes = [
    [
        "##########",
        "#   *    #",
        "# ###### #",
        "#        #",
        "######## #",
        "#   *    #",
        "##########"
    ],
    [
        "##########",
        "#   *    #",
        "# ###### #",
        "# *      #",
        "######## #",
        "#        #",
        "##########"
    ],
    [
        "##########",
        "#        #",
        "# ###### #",
        "# *      #",
        "######## #",
        "#   *    #",
        "##########"
    ]
]

# Tama침o de cada celda
cell_size = 40

# Inicializar variables
player_x, player_y = 1, 1
level = 0
score = 0

def draw_maze():
    for y, row in enumerate(mazes[level]):
        for x, cell in enumerate(row):
            if cell == "#":
                pygame.draw.rect(screen, BLACK, (x * cell_size, y * cell_size, cell_size, cell_size))
            elif cell == " ":
                pygame.draw.rect(screen, WHITE, (x * cell_size, y * cell_size, cell_size, cell_size))
            elif cell == "*":
                pygame.draw.rect(screen, YELLOW, (x * cell_size + 10, y * cell_size + 10, 20, 20))

def draw_player():
    pygame.draw.rect(screen, RED, (player_x * cell_size, player_y * cell_size, cell_size, cell_size))

def is_move_valid(x, y):
    return mazes[level][y][x] != "#"

def collect_star(x, y):
    global score
    if mazes[level][y][x] == "*":
        score += 1
        mazes[level][y] = mazes[level][y][:x] + " " + mazes[level][y][x + 1:]

def show_start_screen():
    font = pygame.font.Font(None, 74)
    text = font.render("Iniciar Juego", True, BLACK)
    text_rect = text.get_rect(center=(screen_width // 2, screen_height // 2))
    screen.fill(WHITE)
    screen.blit(text, text_rect)
    pygame.display.flip()
    pygame.time.delay(2000)

# Bucle principal
show_start_screen()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    keys = pygame.key.get_pressed()
    new_x, new_y = player_x, player_y

    if keys[pygame.K_UP]:
        new_y -= 1
    if keys[pygame.K_DOWN]:
        new_y += 1
    if keys[pygame.K_LEFT]:
        new_x -= 1
    if keys[pygame.K_RIGHT]:
        new_x += 1

    if is_move_valid(new_x, new_y):
        collect_star(new_x, new_y)
        player_x, player_y = new_x, new_y

    # Cambiar de nivel si se ha recolectado todas las estrellas
    if score == 3 and level < len(mazes) - 1:
        level += 1
        player_x, player_y = 1, 1
        score = 0

    screen.fill(WHITE)
    draw_maze()
    draw_player()
    
    # Mostrar puntuaci칩n
    font = pygame.font.Font(None, 36)
    score_text = font.render(f"Puntuaci칩n: {score}", True, BLACK)
    screen.blit(score_text, (10, 10))

    pygame.display.flip()
    pygame.time.delay(100)
